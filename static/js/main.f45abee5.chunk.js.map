{"version":3,"sources":["duck/action.js","duck/types.js","componets/menuHamburger.js","componets/MenuItems.js","componets/FormAddTask.js","page/AddProject.js","componets/Task.js","page/CheckTasks.js","componets/ToDoTask.js","componets/ToCheckTask.js","page/ManageTasks.js","page/HomePage.js","page/ErrorPage.js","componets/MainPage.js","componets/App.js","serviceWorker.js","duck/reducers.js","reducers.js","index.js"],"names":["add","newItem","type","payload","connect","state","toggleOpen","dispatch","toggleNav","className","onClick","exact","to","FormAddTask","props","addTask","event","preventDefault","task","startDate","toLocaleDateString","titleTask","describeTask","setState","prevState","Date","counter","dispatchAddToSaved","handleInputChange","target","value","name","handleInputDate","date","htmlFor","this","onChange","selected","dateFormat","bind","React","Component","AddProject","Task","click","index","style","height","tasks3","map","key","indexOf","display","tasks","addToCheck","id","delateButton","currentTarget","getAttribute","tasks2","addCheck","delateButtonCheck","ManageTasks","HomePage","text","speed","eraseDelay","ErrorPage","MainPage","path","component","CheckTasks","App","basename","process","Boolean","window","location","hostname","match","INITIAL_STATE","INITIAL_STATE1","addTasksArray","action","numIndex","parseInt","splice","filter","numIndex1","rootReducer","combineReducers","store","createStore","composeWithDevTools","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f45abee5.chunk.js","sourcesContent":["import {\r\n  CHANGE_TASKS_ARRAY,\r\n  CHANGE_TO_TASK_ARRAY,\r\n  CHANGE_TO_CHECK_ARRAY,\r\n  CLOSE_NAV\r\n} from \"./types\";\r\n\r\nexport const add = newItem => {\r\n  return {\r\n    type: CHANGE_TASKS_ARRAY,\r\n    payload: newItem\r\n  };\r\n};\r\nexport const addToCheck = index => {\r\n  return { type: CHANGE_TO_TASK_ARRAY, index };\r\n};\r\nexport const addCheck = index => {\r\n  return { type: CHANGE_TO_CHECK_ARRAY, index };\r\n};\r\nexport const toggleNav = () => {\r\n  return {\r\n    type: CLOSE_NAV\r\n  };\r\n};\r\n","export const CHANGE_TASKS_ARRAY = \"CHANGE_TASKS_ARRAY\";\r\nexport const CHANGE_TO_TASK_ARRAY = \"CHANGE_TO_TASK_ARRAY\";\r\nexport const CHANGE_TO_CHECK_ARRAY = \"CHANGE_TO_CHECK_ARRAY\";\r\nexport const CLOSE_NAV = \"CLOSE_NAV\";\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { toggleNav } from \"../duck/action\";\r\n\r\nconst MenuHamburger = ({ toggleNav, toggleOpen }) => {\r\n  return (\r\n    <div className=\"header__Hamburger\" onClick={() => toggleNav()}>\r\n      {/* <i className=\"fas fa-bars\"></i> */}\r\n      {toggleOpen.toggleOpen ? (\r\n        <i className=\"fas fa-times\"></i>\r\n      ) : (\r\n        <i className=\"fas fa-bars\"></i>\r\n      )}\r\n    </div>\r\n    // <MenuItems handleMenu={props.handleMenu} />\r\n  );\r\n};\r\nconst mapStateToProps = state => ({\r\n  toggleOpen: state.toggleOpen\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  toggleNav: () => dispatch(toggleNav())\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MenuHamburger);\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { toggleNav } from \"../duck/action\";\r\n\r\nconst MenuItems = ({ toggleNav, toggleOpen }) => {\r\n  return (\r\n    <nav className={toggleOpen.toggleOpen ? \"showMenu\" : \"hideMenu\"}>\r\n      <ul className=\"nav__Menu\">\r\n        <li className=\"nav__Menu__Link\">\r\n          <NavLink exact onClick={() => toggleNav()} to=\"/\">\r\n            Strona startowa\r\n          </NavLink>\r\n        </li>\r\n        <li className=\"nav__Menu__Link\">\r\n          <NavLink onClick={() => toggleNav()} to=\"/addProject\">\r\n            Dodaj projekt\r\n          </NavLink>\r\n        </li>\r\n        <li className=\"nav__Menu__Link\">\r\n          <NavLink onClick={() => toggleNav()} to=\"/manageTasks\">\r\n            Zarządzaj zadaniami\r\n          </NavLink>\r\n        </li>\r\n        <li className=\"nav__Menu__Link\">\r\n          <NavLink onClick={() => toggleNav()} to=\"/checkTasks\">\r\n            Sprawdź zadania\r\n          </NavLink>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\nconst mapStateToProps = state => ({\r\n  toggleOpen: state.toggleOpen\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  toggleNav: () => dispatch(toggleNav())\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MenuItems);\r\n","import React from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { add } from \"../duck/action\";\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return { dispatchAddToSaved: task => dispatch(add(task)) };\r\n};\r\n\r\nclass FormAddTask extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      startDate: new Date(),\r\n      titleTask: \"\",\r\n      describeTask: \"\",\r\n      counter: 0\r\n    };\r\n  }\r\n\r\n  addTask = event => {\r\n    event.preventDefault();\r\n\r\n    const task = {\r\n      startDate: this.state.startDate.toLocaleDateString(),\r\n      titleTask: this.state.titleTask,\r\n      describeTask: this.state.describeTask\r\n      // index: this.state.counter\r\n    };\r\n    this.setState(prevState => ({\r\n      titleTask: \"\",\r\n      describeTask: \"\",\r\n      startDate: new Date(),\r\n      counter: prevState.counter + 1\r\n    }));\r\n    this.props.dispatchAddToSaved(add(task));\r\n  };\r\n  handleInputChange = event => {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n  handleInputDate = date => {\r\n    this.setState({\r\n      startDate: date\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <form className=\"form\">\r\n          <label htmlFor=\"titleTask\" className=\"form_title\">\r\n            Wpisz nazwę projektu\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"titleTask\"\r\n            className=\"form_titleInput\"\r\n            value={this.state.titleTask}\r\n            onChange={this.handleInputChange}\r\n          />\r\n          <label htmlFor=\"describeTask\" className=\"form_title\">\r\n            Wpisz nazwę projektu\r\n          </label>\r\n          <textarea\r\n            name=\"describeTask\"\r\n            className=\"form_describeTextarea\"\r\n            value={this.state.describeTask}\r\n            onChange={this.handleInputChange}\r\n          ></textarea>\r\n          <DatePicker\r\n            selected={this.state.startDate}\r\n            onChange={this.handleInputDate}\r\n            className=\"form_DataPicker\"\r\n            dateFormat=\"dd/MM/yyyy\"\r\n          />\r\n          <button className=\"form_button\" onClick={this.addTask.bind(this)}>\r\n            Dodaj\r\n          </button>\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n// const mapDispatchToProps = dispatch =>{\r\n// bindActionCreators({add}, dispatch)}\r\nexport default connect(null, mapDispatchToProps)(FormAddTask);\r\n","import React from \"react\";\r\nimport FormAddTask from \"../componets/FormAddTask\";\r\nconst AddProject = props => {\r\n  return (\r\n    <>\r\n      <FormAddTask />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddProject;\r\n","import React from \"react\";\r\n\r\nconst Task = props => {\r\n  return (\r\n    <li className=\"Task\">\r\n      <h3 className=\"Task_title\">{props.titleTask}</h3>\r\n      <p className=\"Task_description\">{props.describeTask}</p>\r\n      <p className=\"Task_time\"> {props.startDate} </p>\r\n      <button\r\n        className=\"Task_button\"\r\n        onClick={props.click}\r\n        index={props.index}\r\n        style={props.style}\r\n      >\r\n        Zrobione\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n","import React from \"react\";\r\nimport Task from \"../componets/Task\";\r\nimport { connect } from \"react-redux\";\r\nconst style = { height: \"80vh\" };\r\nconst mapStateToProps = state => ({\r\n  tasks3: state.tasks3\r\n});\r\n\r\nconst CheckTasks = ({ tasks3 }) => {\r\n  const delateButton = () => {\r\n    return { display: \"none\" };\r\n  };\r\n  return (\r\n    <div className=\"CheckTasks\">\r\n      <ul className=\"ToDoTable\" style={style}>\r\n        <h2 className=\"ToDoTable_title\">WYKONANE</h2>\r\n        {tasks3.tasks3.map(task => (\r\n          <Task\r\n            key={tasks3.tasks3.indexOf(task)}\r\n            titleTask={task.titleTask}\r\n            describeTask={task.describeTask}\r\n            startDate={task.startDate}\r\n            // click={delateButton.bind(this)}\r\n            index={tasks3.tasks3.indexOf(task)}\r\n            style={delateButton()}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(mapStateToProps, {})(CheckTasks);\r\n","import React from \"react\";\r\nimport Task from \"./Task\";\r\nimport { connect } from \"react-redux\";\r\nimport { addToCheck } from \"../duck/action\";\r\n\r\nconst mapStateToProps = state => ({\r\n  tasks: state.tasks\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n  addToCheck: id => dispatch(addToCheck(id))\r\n});\r\n\r\nconst ToDoTask = ({ tasks, addToCheck }) => {\r\n  const delateButton = event => {\r\n    const id = event.currentTarget.getAttribute(\"index\");\r\n    addToCheck(id);\r\n  };\r\n  return (\r\n    <ul className=\"ToDoTable\">\r\n      <h2 className=\"ToDoTable_title\">Do zrobienia</h2>\r\n      {tasks.tasks.map(task => (\r\n        <Task\r\n          key={tasks.tasks.indexOf(task)}\r\n          titleTask={task.titleTask}\r\n          describeTask={task.describeTask}\r\n          startDate={task.startDate}\r\n          click={delateButton}\r\n          index={tasks.tasks.indexOf(task)}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ToDoTask);\r\n","import React from \"react\";\r\nimport Task from \"./Task\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { addCheck } from \"../duck/action\";\r\nconst mapStateToProps = state => ({\r\n  tasks2: state.tasks2\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n  addCheck: id => dispatch(addCheck(id))\r\n});\r\nconst ToCheckTask = ({ tasks2, addCheck }) => {\r\n  const delateButtonCheck = event => {\r\n    const id = event.currentTarget.getAttribute(\"index\");\r\n    addCheck(id);\r\n  };\r\n  return (\r\n    <ul className=\"ToDoTable\">\r\n      <h2 className=\"ToDoTable_title\">do zatwierdzienia</h2>\r\n\r\n      {tasks2.tasks2.map(task => (\r\n        <Task\r\n          key={tasks2.tasks2.indexOf(task)}\r\n          titleTask={task.titleTask}\r\n          describeTask={task.describeTask}\r\n          startDate={task.startDate}\r\n          click={delateButtonCheck}\r\n          index={tasks2.tasks2.indexOf(task)}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ToCheckTask);\r\n","import React from \"react\";\r\nimport ToDoTask from \"../componets/ToDoTask\";\r\nimport ToCheckTask from \"../componets/ToCheckTask\";\r\n\r\nconst ManageTasks = () => {\r\n  return (\r\n    <>\r\n      <h1 className=\"manageTask_title\">Zarządzanie zadaniami</h1>\r\n      <div className=\"manageTask\">\r\n        <ToDoTask />\r\n        <ToCheckTask />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ManageTasks;\r\n","import React from \"react\";\r\nimport ReactTypingEffect from \"react-typing-effect\";\r\n\r\nconst HomePage = () => {\r\n  return (\r\n    <>\r\n      <ReactTypingEffect\r\n        className=\"mainText\"\r\n        text=\"Witaj w menedżerze zadań\"\r\n        speed=\"180\"\r\n        eraseDelay={9999999 * 10000}\r\n      />{\" \"}\r\n      <ReactTypingEffect\r\n        className=\"secondText\"\r\n        text=\"Możesz tutaj stworzyć projekt i rozłożyć go na poszczególne zadania\"\r\n        speed=\"180\"\r\n        eraseDelay={9999999 * 10000}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import React from \"react\";\r\n\r\nconst ErrorPage = () => {\r\n  return <h1>Strona nie istnieje</h1>;\r\n};\r\n\r\nexport default ErrorPage;\r\n","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport MenuItems from \"./MenuItems\";\r\nimport AddProject from \"../page/AddProject\";\r\nimport CheckTasks from \"../page/CheckTasks\";\r\nimport ManageTasks from \"../page/ManageTasks\";\r\nimport HomePage from \"../page/HomePage\";\r\nimport ErrorPage from \"../page/ErrorPage\";\r\n\r\nconst MainPage = () => {\r\n  return (\r\n    <>\r\n      <MenuItems />\r\n      <section className=\"main-page__section\">\r\n        <Switch>\r\n          <Route path=\"/\" exact component={HomePage} className=\"greeting\" />\r\n          <Route path=\"/addProject\" component={AddProject} />\r\n          <Route path=\"/checkTasks\" component={CheckTasks} />\r\n          <Route path=\"/manageTasks\" component={ManageTasks} />\r\n          <Route component={ErrorPage} />\r\n        </Switch>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n","import React, { Component } from \"react\";\nimport \"../scss/App.scss\";\nimport MenuHamburger from \"./menuHamburger\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport MainPage from \"./MainPage\";\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <div>\n          <header className=\"header\">\n            <h1 className=\"header__logo\">Task Manager</h1>\n            <MenuHamburger />\n          </header>\n          <main className=\"Main-page\">\n            <MainPage />\n          </main>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\r\n  CHANGE_TASKS_ARRAY,\r\n  CHANGE_TO_TASK_ARRAY,\r\n  CHANGE_TO_CHECK_ARRAY,\r\n  CLOSE_NAV\r\n} from \"./types\";\r\n\r\nconst INITIAL_STATE = {\r\n  tasks: [],\r\n  tasks2: [],\r\n  tasks3: []\r\n};\r\nconst INITIAL_STATE1 = {\r\n  toggleOpen: false\r\n};\r\nexport const addTasksArray = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case CHANGE_TASKS_ARRAY:\r\n      return {\r\n        ...state,\r\n        tasks: [...state.tasks, action.payload.payload]\r\n      };\r\n    case CHANGE_TO_TASK_ARRAY:\r\n      // ...state.filter(city => city !== action.city),\r\n      const numIndex = parseInt(action.index);\r\n      return {\r\n        ...state,\r\n        tasks2: [...state.tasks2, ...state.tasks.splice(numIndex, 1)],\r\n        tasks: state.tasks.filter(index => index !== numIndex)\r\n      };\r\n    case CHANGE_TO_CHECK_ARRAY:\r\n      const numIndex1 = parseInt(action.index);\r\n      return {\r\n        ...state,\r\n        tasks3: [...state.tasks3, ...state.tasks2.splice(numIndex1, 1)],\r\n        tasks2: state.tasks2.filter(index => index !== numIndex1)\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport const toggleNav = (state = INITIAL_STATE1, action) => {\r\n  switch (action.type) {\r\n    case CLOSE_NAV:\r\n      return {\r\n        ...state,\r\n        toggleOpen: !state.toggleOpen\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { addTasksArray, toggleNav } from \"./duck/reducers\";\r\n\r\nconst rootReducer = combineReducers({\r\n  tasks: addTasksArray,\r\n  tasks2: addTasksArray,\r\n  tasks3: addTasksArray,\r\n  toggleOpen: toggleNav\r\n});\r\nexport default rootReducer;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./scss/App.scss\";\nimport App from \"./componets/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport rootReducer from \"./reducers\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nconst store = createStore(rootReducer, composeWithDevTools());\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}